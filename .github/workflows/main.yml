name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build, tag, and push image to DockerHub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          IMAGE_NAME: python
        run: |
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME .
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest
          pytest test.py

  deploy_to_server:
    needs: build_and_push_to_server
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        if: success() # Only deploy if the previous steps were successful
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Log in to the Docker Hub
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            # Replace this with your deployment script
            docker pull ${{secrets.DOCKERHUB_USERNAME}}/$IMAGE_NAME:latest
            docker stop python
            docker rm python
            docker run -d -p 8080:8080 --name python ${{secrets.DOCKERHUB_USERNAME}}/$IMAGE_NAME:latest
